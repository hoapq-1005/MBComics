//
//  File.swift
//  TEnglish
//
//  Created by ToRing on 8/23/19.
//  Copyright ¬© 2019 toring. All rights reserved.
//

import Foundation
enum DLogTag : String{
    case debug = "üíú[DEBUG]"
    case info = "üíö[INFO]"
    case warning = "üíõ[WARNING]"
    case error = "‚ù§Ô∏è[ERROR]"
}


/// In ra c√°c th√¥ng tin. Ch·ªâ th·ª±c hi·ªán khi ch·∫°y debug
///
/// - Parameters:
///   - tag: Lo·∫°i ph√¢n bi·ªát
///   - logMessage: N·ªôi dung
///   - functionName: function g·ªçi log
///   - line: D√≤ng c√¢u l·ªánh log ƒë∆∞·ª£c vi·∫øt
///   - fileName: File ch·ª©a c√¢u l·ªánh log
///   - column: K√≠ t·ª± b·∫Øt ƒë·∫ßu c·ªßa c√¢u l·ªánh log
fileprivate func dLog(_ tag: DLogTag, _ logMessage: Any, functionName: String = #function, line: Int = #line, fileName: String = #file, column: Int = #column) {
    #if RELEASE
    #else
    let tag = tag.rawValue
    let fileName = (fileName as NSString).lastPathComponent
    let logDate = Date().stringForLog()
    let logString = "\(logDate) \(tag) \(logMessage)\n\tAt: [\(fileName)] - [\(functionName)] - [Line \(line)]"
    Swift.print(logString)
    #endif
}

func dLogDebug(_ logMessage: Any, functionName: String = #function, line: Int = #line, fileName: String = #file, column: Int = #column) {
    dLog(.debug, logMessage, functionName: functionName, line: line, fileName: fileName, column: column)
}

func dLogInfo(_ logMessage: Any, functionName: String = #function, line: Int = #line, fileName: String = #file, column: Int = #column) {
    dLog(.info, logMessage, functionName: functionName, line: line, fileName: fileName, column: column)
}

func dLogWarning(_ logMessage: Any, functionName: String = #function, line: Int = #line, fileName: String = #file, column: Int = #column) {
    dLog(.warning, logMessage, functionName: functionName, line: line, fileName: fileName, column: column)
}

func dLogError(_ logMessage: Any, functionName: String = #function, line: Int = #line, fileName: String = #file, column: Int = #column) {
    dLog(.error, logMessage, functionName: functionName, line: line, fileName: fileName, column: column)
}
